// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cache 1`] = `"test"`;

exports[`cache 2`] = `
MemoryCache {
  "name": "test",
  "options": Object {
    "max": 8,
  },
  "store": LRUCache {
    "allowStale": false,
    "disposeAfter": null,
    "disposed": null,
    "fetchMethod": null,
    "free": Stack {
      "heap": Uint8Array [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
      ],
      "length": 0,
    },
    "head": 0,
    "initialFill": 1,
    "keyList": Array [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    "keyMap": Map {},
    "max": 8,
    "maxSize": 0,
    "next": Uint8Array [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "noDeleteOnFetchRejection": false,
    "noDisposeOnSet": false,
    "noUpdateTTL": false,
    "prev": Uint8Array [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 0,
    "sizeCalculation": undefined,
    "tail": 0,
    "ttl": 0,
    "ttlAutopurge": false,
    "ttlResolution": 1,
    "updateAgeOnGet": false,
    "updateAgeOnHas": false,
    "valList": Array [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
  },
}
`;

exports[`cache get & put 1`] = `undefined`;

exports[`cache get & put 2`] = `"test"`;

exports[`cache get & put 3`] = `"test"`;

exports[`cache get & put 4`] = `undefined`;

exports[`cache get & put 5`] = `null`;

exports[`cache putIfAbsent 1`] = `"test"`;

exports[`cache putIfAbsent 2`] = `null`;

exports[`cache putIfAbsent 3`] = `null`;

exports[`cache putIfAbsent 4`] = `
MemoryCache {
  "name": "test",
  "options": Object {
    "max": 8,
  },
  "store": LRUCache {
    "allowStale": false,
    "calculatedSize": 0,
    "disposeAfter": null,
    "disposed": null,
    "fetchMethod": null,
    "free": Stack {
      "heap": Uint8Array [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
      ],
      "length": 0,
    },
    "head": 0,
    "initialFill": 3,
    "keyList": Array [
      "test",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
    "keyMap": Map {
      "test" => 0,
      "test2" => 1,
      "test3" => 2,
    },
    "max": 8,
    "maxSize": 0,
    "next": Uint8Array [
      1,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "noDeleteOnFetchRejection": false,
    "noDisposeOnSet": false,
    "noUpdateTTL": false,
    "prev": Uint8Array [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 3,
    "sizeCalculation": undefined,
    "tail": 2,
    "ttl": 0,
    "ttlAutopurge": false,
    "ttlResolution": 1,
    "updateAgeOnGet": false,
    "updateAgeOnHas": false,
    "valList": Array [
      "test",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
  },
}
`;

exports[`cache putIfAbsent 5`] = `"test"`;

exports[`cache putIfAbsent 6`] = `"test2"`;

exports[`clear 1`] = `null`;

exports[`clear 2`] = `null`;

exports[`clear 3`] = `null`;

exports[`clear 4`] = `
MemoryCache {
  "name": "test",
  "options": Object {
    "max": 8,
  },
  "store": LRUCache {
    "allowStale": false,
    "calculatedSize": 0,
    "disposeAfter": null,
    "disposed": null,
    "fetchMethod": null,
    "free": Stack {
      "heap": Uint8Array [
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
      ],
      "length": 0,
    },
    "head": 0,
    "initialFill": 3,
    "keyList": Array [
      "test",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
    "keyMap": Map {
      "test" => 0,
      "test2" => 1,
      "test3" => 2,
    },
    "max": 8,
    "maxSize": 0,
    "next": Uint8Array [
      1,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "noDeleteOnFetchRejection": false,
    "noDisposeOnSet": false,
    "noUpdateTTL": false,
    "prev": Uint8Array [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 3,
    "sizeCalculation": undefined,
    "tail": 2,
    "ttl": 0,
    "ttlAutopurge": false,
    "ttlResolution": 1,
    "updateAgeOnGet": false,
    "updateAgeOnHas": false,
    "valList": Array [
      "testnew",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
  },
}
`;

exports[`clear 5`] = `
MemoryCache {
  "name": "test",
  "options": Object {
    "max": 8,
  },
  "store": LRUCache {
    "allowStale": false,
    "calculatedSize": 0,
    "disposeAfter": null,
    "disposed": null,
    "fetchMethod": null,
    "free": Stack {
      "heap": Uint8Array [
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
      ],
      "length": 0,
    },
    "head": 0,
    "initialFill": 1,
    "keyList": Array [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    "keyMap": Map {},
    "max": 8,
    "maxSize": 0,
    "next": Uint8Array [
      1,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "noDeleteOnFetchRejection": false,
    "noDisposeOnSet": false,
    "noUpdateTTL": false,
    "prev": Uint8Array [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 0,
    "sizeCalculation": undefined,
    "tail": 0,
    "ttl": 0,
    "ttlAutopurge": false,
    "ttlResolution": 1,
    "updateAgeOnGet": false,
    "updateAgeOnHas": false,
    "valList": Array [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
  },
}
`;

exports[`evict 1`] = `null`;

exports[`evict 2`] = `null`;

exports[`evict 3`] = `null`;

exports[`evict 4`] = `
MemoryCache {
  "name": "test",
  "options": Object {
    "max": 8,
  },
  "store": LRUCache {
    "allowStale": false,
    "calculatedSize": 0,
    "disposeAfter": null,
    "disposed": null,
    "fetchMethod": null,
    "free": Stack {
      "heap": Uint8Array [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
      ],
      "length": 0,
    },
    "head": 0,
    "initialFill": 3,
    "keyList": Array [
      "test",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
    "keyMap": Map {
      "test" => 0,
      "test2" => 1,
      "test3" => 2,
    },
    "max": 8,
    "maxSize": 0,
    "next": Uint8Array [
      1,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "noDeleteOnFetchRejection": false,
    "noDisposeOnSet": false,
    "noUpdateTTL": false,
    "prev": Uint8Array [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 3,
    "sizeCalculation": undefined,
    "tail": 2,
    "ttl": 0,
    "ttlAutopurge": false,
    "ttlResolution": 1,
    "updateAgeOnGet": false,
    "updateAgeOnHas": false,
    "valList": Array [
      "testnew",
      "test2",
      "test3",
      null,
      null,
      null,
      null,
      null,
    ],
  },
}
`;
