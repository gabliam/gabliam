// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Consumer test with buffer object 1`] = `
{
  "test": "buffertest",
}
`;

exports[`Consumer test with buffer object 2`] = `1`;

exports[`Consumer test with buffer object 3`] = `
[
  [
    {
      "test": "buffertest",
    },
  ],
]
`;

exports[`Consumer test with buffer string 1`] = `"buffertest"`;

exports[`Consumer test with buffer string 2`] = `1`;

exports[`Consumer test with buffer string 3`] = `
[
  [
    "buffertest",
  ],
]
`;

exports[`Consumer test with object 1`] = `
{
  "test": "cool",
}
`;

exports[`Consumer test with object 2`] = `1`;

exports[`Consumer test with object 3`] = `
[
  [
    {
      "test": "cool",
    },
  ],
]
`;

exports[`Consumer test with string 1`] = `"test"`;

exports[`Consumer test with string 2`] = `1`;

exports[`Consumer test with string 3`] = `
[
  [
    "test",
  ],
]
`;

exports[`Errors with bad config 1`] = `[Error: Error for 'application.amqp' value{"_original":"bad","details":[{"message":"/"value/" must be one of [object, array]","path":[],"type":"alternatives.types","context":{"types":["object","array"],"label":"value","value":"bad"}}]}]`;

exports[`Errors without config folder 1`] = `[AmqpConfigIsMandatoryError: AmqpConfig is mandatory]`;

exports[`Errors without queueName 1`] = `[Error: Error for 'application.amqp' value{"_original":{"url":"amqp://bad","queues":{"queueTest":{"name":"lol"}}},"details":[{"message":"/"value/" does not match any of the allowed types","path":[],"type":"alternatives.match","context":{"message":"/"queues.queueTest.queueName/" is required. /"queues.queueTest.name/" is not allowed. /"value/" must be an array","details":[{"message":"/"queues.queueTest.queueName/" is required","path":["queues","queueTest","queueName"],"type":"any.required","context":{"label":"queues.queueTest.queueName","key":"queueName"}},{"message":"/"queues.queueTest.name/" is not allowed","path":["queues","queueTest","name"],"type":"object.unknown","context":{"child":"name","label":"queues.queueTest.name","value":"lol","key":"name"}},{"message":"/"value/" must be an array","path":[],"type":"array.base","context":{"label":"value","value":{"url":"amqp://bad","queues":{"queueTest":{"name":"lol"}}}}}],"label":"value","value":{"url":"amqp://bad","queues":{"queueTest":{"name":"lol"}}}}}]}]`;

exports[`Listener test with buffer object 1`] = `
{
  "test": "buffertest",
}
`;

exports[`Listener test with buffer object 2`] = `1`;

exports[`Listener test with buffer object 3`] = `
[
  [
    {
      "test": "buffertest",
    },
  ],
]
`;

exports[`Listener test with buffer string 1`] = `"buffertest"`;

exports[`Listener test with buffer string 2`] = `1`;

exports[`Listener test with buffer string 3`] = `
[
  [
    "buffertest",
  ],
]
`;

exports[`Listener test with object 1`] = `
{
  "test": "cool",
}
`;

exports[`Listener test with object 2`] = `1`;

exports[`Listener test with object 3`] = `
[
  [
    {
      "test": "cool",
    },
  ],
]
`;

exports[`Listener test with string 1`] = `"test"`;

exports[`Listener test with string 2`] = `1`;

exports[`Listener test with string 3`] = `
[
  [
    "test",
  ],
]
`;

exports[`Listener test with undefined 1`] = `undefined`;

exports[`Listener test with undefined 2`] = `1`;

exports[`Listener test with undefined 3`] = `
[
  [
    undefined,
  ],
]
`;

exports[`bad queue 1`] = `[AmqpQueueDoesntExistError: Queue "consumerTestBad" doesn't exist.]`;

exports[`consumer throw error 1`] = `
{
  "message": "Consumer error",
  "stack": Any<String>,
}
`;

exports[`consumer throw error 2`] = `1`;

exports[`consumer throw error 3`] = `
[
  [
    "test",
  ],
]
`;

exports[`must fail when CUnit not found 1`] = `[AmqpConnectionNotFoundError: Connection 'bad' not found]`;

exports[`must fail when getConnection not found 1`] = `"Connection 'notfound' not found"`;

exports[`must fail with duplicate connections 1`] = `[AmqpDuplicateConnectionError: Duplicate connection 'connection1']`;

exports[`sendAndReceive timeout 1`] = `[AmqpTimeoutError: Timeout on operation: operation timed out]`;

exports[`start 2 times 1`] = `"testCase.content"`;

exports[`start 2 times 2`] = `1`;

exports[`start 2 times 3`] = `
[
  [
    "testCase.content",
  ],
]
`;

exports[`with config 2 database 1`] = `"connection1testCase"`;

exports[`with config 2 database 2`] = `"connection1testCase"`;

exports[`with one connection with name and entity without cunit 1`] = `"testCase.content"`;

exports[`with one connection with name and entity without cunit 2`] = `1`;

exports[`with one connection with name and entity without cunit 3`] = `
[
  [
    "testCase.content",
  ],
]
`;
